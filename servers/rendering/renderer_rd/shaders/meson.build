# NOTE: do not use files() here
_rd_shaders = [
'blit.glsl',
'blur_raster.glsl',
'blur_raster_inc.glsl',
'bokeh_dof.glsl',
'bokeh_dof_raster.glsl',
'canvas.glsl',
'canvas_occlusion.glsl',
'canvas_sdf.glsl',
'canvas_uniforms_inc.glsl',
'cluster_data_inc.glsl',
'cluster_debug.glsl',
'cluster_render.glsl',
'cluster_store.glsl',
'copy.glsl',
'copy_to_fb.glsl',
'cubemap_downsampler.glsl',
'cubemap_downsampler_raster.glsl',
'cubemap_filter.glsl',
'cubemap_filter_raster.glsl',
'cubemap_roughness.glsl',
'cubemap_roughness_raster.glsl',
'cube_to_dp.glsl',
'decal_data_inc.glsl',
'gi.glsl',
'giprobe_write.glsl',
'light_data_inc.glsl',
'luminance_reduce.glsl',
'luminance_reduce_raster.glsl',
'luminance_reduce_raster_inc.glsl',
'particles_copy.glsl',
'particles.glsl',
'resolve.glsl',
'roughness_limiter.glsl',
'scene_forward_aa_inc.glsl',
'scene_forward_clustered.glsl',
'scene_forward_clustered_inc.glsl',
'scene_forward_gi_inc.glsl',
'scene_forward_lights_inc.glsl',
'scene_forward_mobile.glsl',
'scene_forward_mobile_inc.glsl',
'screen_space_reflection_filter.glsl',
'screen_space_reflection.glsl',
'screen_space_reflection_scale.glsl',
'sdfgi_debug.glsl',
'sdfgi_debug_probes.glsl',
'sdfgi_direct_light.glsl',
'sdfgi_integrate.glsl',
'sdfgi_preprocess.glsl',
'skeleton.glsl',
'sky.glsl',
'sort.glsl',
'specular_merge.glsl',
'ssao_blur.glsl',
'ssao_downsample.glsl',
'ssao.glsl',
'ssao_importance_map.glsl',
'ssao_interleave.glsl',
'subsurface_scattering.glsl',
'tonemap.glsl',
'volumetric_fog.glsl',
'voxel_gi_debug.glsl',
'voxel_gi.glsl',
'voxel_gi_sdf.glsl',

]

foreach glsl_file : _rd_shaders
    _rd_target = custom_target(
        'rd_target_' + glsl_file,
        output: '@PLAINNAME@.gen.h',
        input: glsl_file,
        command: [SCRIPT_GLSL, 'rd', '@INPUT@', '@OUTPUT@'],
        build_by_default: true
    )

    SOURCES += [_rd_target]
endforeach
